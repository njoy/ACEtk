include(Sanitizers)

set(asan_supported Linux_GNU Linux_Clang Darwin_AppleClang)
set(msan_supported Linux_Clang)
set(tsan_supported Linux_GNU Linux_Clang Darwin_AppleClang)
set(ubsan_supported Linux_GNU Linux_Clang Darwin_AppleClang)

option(Sanitizer.tests "enable sanitizer tests" OFF)

if(Sanitizer.tests)
  foreach(san asan msan tsan ubsan)
    if(${CMAKE_SYSTEM_NAME}_${CMAKE_CXX_COMPILER_ID} IN_LIST ${san}_supported)
      add_executable(trigger_${san} trigger_${san}.cpp)
      target_link_libraries(trigger_${san} PUBLIC shacl::cmake::Sanitizers_CXX)
      target_compile_features(trigger_${san} PUBLIC cxx_std_14)
      set_target_properties(trigger_${san} PROPERTIES ${san} ON)
      add_test(NAME shacl.cmake.trigger_${san} COMMAND trigger_${san})
    endif()
  endforeach()
endif()
